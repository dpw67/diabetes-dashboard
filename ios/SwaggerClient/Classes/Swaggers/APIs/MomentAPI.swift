//
// MomentAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class MomentAPI: APIBase {
    /**
     
     delete a specific moment by ID
     
     - parameter id: (path) ID of moment to delete 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMoment(id id: Int, completion: ((error: ErrorType?) -> Void)) {
        deleteMomentWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     
     delete a specific moment by ID
     
     - DELETE /moments/{id}
     - deletes a single moment based on the ID supplied
     
     - parameter id: (path) ID of moment to delete 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteMomentWithRequestBuilder(id id: Int) -> RequestBuilder<Void> {
        var path = "/moments/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     Returns all pets
     
     - parameter tags: (query) tags to filter by (optional)
     - parameter limit: (query) maximum number of results to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func findMoments(tags tags: [String]?, limit: Int?, completion: ((data: [Moment]?, error: ErrorType?) -> Void)) {
        findMomentsWithRequestBuilder(tags: tags, limit: limit).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Returns all pets
     
     - GET /moments
     - Returns all moments
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "id" : 123456789,
  "tag" : "aeiou",
  "time" : "2000-01-23T04:56:07.000+0000",
  "type" : "aeiou",
  "value" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <id>123456</id>
  <name>string</name>
  <tag>string</tag>
  <type>string</type>
  <time>2000-01-23T04:56:07.000Z</time>
  <value>string</value>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "id" : 123456789,
  "tag" : "aeiou",
  "time" : "2000-01-23T04:56:07.000+0000",
  "type" : "aeiou",
  "value" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <id>123456</id>
  <name>string</name>
  <tag>string</tag>
  <type>string</type>
  <time>2000-01-23T04:56:07.000Z</time>
  <value>string</value>
</null>}]
     
     - parameter tags: (query) tags to filter by (optional)
     - parameter limit: (query) maximum number of results to return (optional)

     - returns: RequestBuilder<[Moment]> 
     */
    public class func findMomentsWithRequestBuilder(tags tags: [String]?, limit: Int?) -> RequestBuilder<[Moment]> {
        let path = "/moments"
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "tags": tags,
            "limit": limit
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[Moment]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     Find moment by ID
     
     - parameter id: (path) ID of moment to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMomentsById(id id: Int, completion: ((data: [Moment]?, error: ErrorType?) -> Void)) {
        getMomentsByIdWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     Find moment by ID
     
     - GET /moments/{id}
     - Returns a moment by on ID, if the user does not have access to the moment
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "id" : 123456789,
  "tag" : "aeiou",
  "time" : "2000-01-23T04:56:07.000+0000",
  "type" : "aeiou",
  "value" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <id>123456</id>
  <name>string</name>
  <tag>string</tag>
  <type>string</type>
  <time>2000-01-23T04:56:07.000Z</time>
  <value>string</value>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "id" : 123456789,
  "tag" : "aeiou",
  "time" : "2000-01-23T04:56:07.000+0000",
  "type" : "aeiou",
  "value" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <id>123456</id>
  <name>string</name>
  <tag>string</tag>
  <type>string</type>
  <time>2000-01-23T04:56:07.000Z</time>
  <value>string</value>
</null>}]
     
     - parameter id: (path) ID of moment to fetch 

     - returns: RequestBuilder<[Moment]> 
     */
    public class func getMomentsByIdWithRequestBuilder(id id: Int) -> RequestBuilder<[Moment]> {
        var path = "/moments/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<[Moment]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     saves a specific moment with the identified id
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func momentsIdPost(completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        momentsIdPostWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     saves a specific moment with the identified id
     
     - POST /moments/{id}
     - examples: [{contentType=application/json, example="{}"}]

     - returns: RequestBuilder<AnyObject> 
     */
    public class func momentsIdPostWithRequestBuilder() -> RequestBuilder<AnyObject> {
        let path = "/moments/{id}"
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: parameters, isBody: true)
    }

    /**
     
     saves a specific moment with the identified id
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func momentsIdPut(completion: ((data: Moment?, error: ErrorType?) -> Void)) {
        momentsIdPutWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     saves a specific moment with the identified id
     
     - PUT /moments/{id}
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "id" : 123456789,
  "tag" : "aeiou",
  "time" : "2000-01-23T04:56:07.000+0000",
  "type" : "aeiou",
  "value" : "aeiou"
}}]

     - returns: RequestBuilder<Moment> 
     */
    public class func momentsIdPutWithRequestBuilder() -> RequestBuilder<Moment> {
        let path = "/moments/{id}"
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [:]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<Moment>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: parameters, isBody: true)
    }

}
